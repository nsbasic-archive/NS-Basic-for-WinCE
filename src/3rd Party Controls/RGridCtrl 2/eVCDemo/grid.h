#if !defined(AFX_GRID_H__A4F66A50_2278_4415_9090_2936AC5CD687__INCLUDED_)
#define AFX_GRID_H__A4F66A50_2278_4415_9090_2936AC5CD687__INCLUDED_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CGrid wrapper class

class CGrid : public CWnd
{
protected:
	DECLARE_DYNCREATE(CGrid)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x58e370e, 0x6141, 0x4e41, { 0x8b, 0x95, 0x84, 0x6e, 0xe0, 0x4b, 0xb3, 0x3 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }


// Operations
public:
	long GetRows();
	void SetRows(long nNewValue);
	long GetFixedRows();
	void SetFixedRows(long nNewValue);
	long GetCols();
	void SetCols(long nNewValue);
	long GetFixedCols();
	void SetFixedCols(long nNewValue);
	unsigned long GetBackColor();
	void SetBackColor(unsigned long newValue);
	unsigned long GetBackColorBkg();
	void SetBackColorBkg(unsigned long newValue);
	unsigned long GetBackColorFixed();
	void SetBackColorFixed(unsigned long newValue);
	long GetGridLines();
	void SetGridLines(long nNewValue);
	long GetGridLinesFixed();
	void SetGridLinesFixed(long nNewValue);
	unsigned long GetGridColor();
	void SetGridColor(unsigned long newValue);
	unsigned long GetGridColorFixed();
	void SetGridColorFixed(unsigned long newValue);
	long GetAllowUserResizing();
	void SetAllowUserResizing(long nNewValue);
	long GetScrollBars();
	void SetScrollBars(long nNewValue);
	long GetBorderStyle();
	void SetBorderStyle(long nNewValue);
	BOOL GetScrollTrack();
	void SetScrollTrack(BOOL bNewValue);
	unsigned long GetForeColor();
	void SetForeColor(unsigned long newValue);
	unsigned long GetForeColorFixed();
	void SetForeColorFixed(unsigned long newValue);
	unsigned long GetForeColorSel();
	void SetForeColorSel(unsigned long newValue);
	unsigned long GetBackColorSel();
	void SetBackColorSel(unsigned long newValue);
	long GetRowHeightMin();
	void SetRowHeightMin(long nNewValue);
	CString GetTextMatrix(long Row, long Col);
	void SetTextMatrix(long Row, long Col, LPCTSTR lpszNewValue);
	CString GetTextArray(long index);
	void SetTextArray(long index, LPCTSTR lpszNewValue);
	long GetRow();
	void SetRow(long nNewValue);
	long GetCol();
	void SetCol(long nNewValue);
	unsigned long GetCellBackColor();
	void SetCellBackColor(unsigned long newValue);
	unsigned long GetCellForeColor();
	void SetCellForeColor(unsigned long newValue);
	long GetCellAlignment();
	void SetCellAlignment(long nNewValue);
	long GetCellLeft();
	long GetCellTop();
	long GetCellWidth();
	long GetCellHeight();
	void SetColAlignment(long index, long nNewValue);
	CString GetText();
	void SetText(LPCTSTR lpszNewValue);
	long GetColWidth(long index);
	void SetColWidth(long index, long nNewValue);
	BOOL GetColIsVisible(long index);
	long GetColPos(long index);
	long GetRowHeight(long index);
	void SetRowHeight(long index, long nNewValue);
	BOOL GetRowIsVisible(long index);
	long GetRowPos(long index);
	long GetColSel();
	void SetColSel(long nNewValue);
	long GetRowSel();
	void SetRowSel(long nNewValue);
	BOOL GetAllowBigSelection();
	void SetAllowBigSelection(BOOL bNewValue);
	long GetSelectionMode();
	void SetSelectionMode(long nNewValue);
	short GetGridLineWidth();
	void SetGridLineWidth(short nNewValue);
	long GetLeftCol();
	void SetLeftCol(long nNewValue);
	long GetTopRow();
	void SetTopRow(long nNewValue);
	long GetFixedAlignment();
	void SetFixedAlignment(long nNewValue);
	CString GetCellFontName();
	void SetCellFontName(LPCTSTR lpszNewValue);
	long GetCellFontSize();
	void SetCellFontSize(long nNewValue);
	BOOL GetCellFontBold();
	void SetCellFontBold(BOOL bNewValue);
	BOOL GetCellFontItalic();
	void SetCellFontItalic(BOOL bNewValue);
	BOOL GetCellFontUnderline();
	void SetCellFontUnderline(BOOL bNewValue);
	long GetCellFontWidth();
	void SetCellFontWidth(long nNewValue);
	BOOL GetCellFontStrikeThrough();
	void SetCellFontStrikeThrough(BOOL bNewValue);
	CString GetFontName();
	void SetFontName(LPCTSTR lpszNewValue);
	long GetFontSize();
	void SetFontSize(long nNewValue);
	BOOL GetFontBold();
	void SetFontBold(BOOL bNewValue);
	BOOL GetFontItalic();
	void SetFontItalic(BOOL bNewValue);
	BOOL GetFontUnderline();
	void SetFontUnderline(BOOL bNewValue);
	long GetFontWidth();
	void SetFontWidth(long nNewValue);
	BOOL GetFontStrikeThrough();
	void SetFontStrikeThrough(BOOL bNewValue);
	BOOL GetFixedFontBold();
	void SetFixedFontBold(BOOL bNewValue);
	BOOL GetFixedFontItalic();
	void SetFixedFontItalic(BOOL bNewValue);
	CString GetFixedFontName();
	void SetFixedFontName(LPCTSTR lpszNewValue);
	long GetFixedFontSize();
	void SetFixedFontSize(long nNewValue);
	BOOL GetFixedFontStrikeThrough();
	void SetFixedFontStrikeThrough(BOOL bNewValue);
	BOOL GetFixedFontUnderline();
	void SetFixedFontUnderline(BOOL bNewValue);
	long GetFixedFontWidth();
	void SetFixedFontWidth(long nNewValue);
	long GetCellPictureAlignment();
	void SetCellPictureAlignment(long nNewValue);
	BOOL GetWordWrap();
	void SetWordWrap(BOOL bNewValue);
	long GetHighLight();
	void SetHighLight(long nNewValue);
	BOOL GetRedraw();
	void SetRedraw(BOOL bNewValue);
	void Clear();
	void AddItem(LPCTSTR Item, VARIANT* index);
	void RemoveItem(long index);
	void SetEnabled(BOOL bNewValue);
	BOOL GetEnabled();
	void CellLoadPicture(LPCTSTR FileName);
	CString GetRegistrationCode();
	void SetRegistrationCode(LPCTSTR lpszNewValue);
	long GetHWnd();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_GRID_H__A4F66A50_2278_4415_9090_2936AC5CD687__INCLUDED_)
